name: Backup Database

on:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      DB_URL:
        required: true
      S3_BACKUP_BUCKET:
        required: true

jobs:
  backup-db:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Install PostgreSQL client 17
        run: |
          sudo apt-get update
          sudo apt-get install -y wget gnupg lsb-release
          echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
          wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
          sudo apt-get update
          sudo apt-get install -y postgresql-client-17

      - name: Read version from package.json
        id: version
        run: |
          VERSION=$(jq -r .version package.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Dump the database
        run: |
          TIMESTAMP=$(date +%Y-%m-%d_%H-%M-%S)
          FILE_NAME="backup_v${VERSION}_${TIMESTAMP}.dump"
          pg_dump --dbname="${{ secrets.DB_URL }}" -F c -f "$FILE_NAME"
          echo "DUMP_FILE=$FILE_NAME" >> $GITHUB_ENV

      - name: Upload backup to S3
        run: |
          aws s3 cp "$DUMP_FILE" "s3://${{ secrets.S3_BACKUP_BUCKET }}/db-backups/$DUMP_FILE"
